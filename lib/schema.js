// Generated by CoffeeScript 1.6.2
(function() {
  var Field, Model, Schema, type, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require("./model");

  type = require("type-component");

  Field = require("./field");

  Schema = (function(_super) {
    __extends(Schema, _super);

    function Schema() {
      _ref = Schema.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    Schema.prototype.isNew = function(model) {
      return !model.get("_id");
    };

    /*
    */


    Schema.prototype.model = function(data) {
      var key, model;

      if (data == null) {
        data = {};
      }
      if (type(data) === "string") {
        data = {
          _id: data
        };
      }
      model = new Model(this, {
        _id: data._id
      });
      model.reset(this.map(model, data));
      for (key in this._methods) {
        model[key] = this._methods[key];
      }
      return model;
    };

    return Schema;

  })(Field);

  module.exports = function(options, name, linen) {
    if (options == null) {
      options = {};
    }
    if (name == null) {
      name = void 0;
    }
    if (linen == null) {
      linen = void 0;
    }
    return new Schema(Field.parseOptions(options, name, linen)).init();
  };

}).call(this);
