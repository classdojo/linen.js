// Generated by CoffeeScript 1.6.2
(function() {
  var Model, Schema, parser, type;

  type = require("type-component");

  parser = require("./fieldParser");

  Model = require("./model");

  Schema = (function() {
    /*
    */
    function Schema(linen, options) {
      this.linen = linen;
      if (options == null) {
        options = {};
      }
      this.name = options.name;
      this._fields = parser.parse(this, options.fields);
    }

    Schema.prototype.model = function(data) {
      var d;

      d = {};
      if (type(data) === "string") {
        d._id = data;
      } else {
        d = data || {};
      }
      return new Model(this, this._fields.map(d));
    };

    /*
    */


    Schema.prototype.validate = function(model) {
      return this._fields.validate(model);
    };

    /*
    */


    Schema.prototype.save = function(model, next) {
      var _this = this;

      return this._fields.save(model, function(err) {
        if (err != null) {
          return next(err);
        }
        return console.log("SEV");
      });
    };

    /*
    */


    Schema.prototype.fetch = function(model, properties) {
      var field, property, _i, _len, _results;

      if (!properties) {
        properties = this._fields.names();
      }
      _results = [];
      for (_i = 0, _len = properties.length; _i < _len; _i++) {
        property = properties[_i];
        field = this._fields.get(property);
        _results.push(field.fetch(model));
      }
      return _results;
    };

    return Schema;

  })();

  module.exports = Schema;

}).call(this);
