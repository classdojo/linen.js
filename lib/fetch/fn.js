// Generated by CoffeeScript 1.6.2
(function() {
  var FnFetch, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  FnFetch = (function(_super) {
    __extends(FnFetch, _super);

    function FnFetch() {
      _ref = FnFetch.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    FnFetch.prototype.fetch = function(payload, next) {
      var method, _ref1,
        _this = this;

      method = payload.method;
      return payload.model._memoizer.call(this.field.path, (_ref1 = this.field.options.memoize) != null ? _ref1 : {
        maxAge: 1000 * 5
      }, next, function(next) {
        var fn;

        if (!(fn = _this.field.options.fetch[method])) {
          return next(new Error("method \"" + method + "\" on \"" + _this.field.path + "\" doesn't exist"));
        }
        payload.field = _this.field;
        return fn.call(payload.model, payload, function(err, result) {
          if (result == null) {
            result = {};
          }
          return setTimeout((function() {
            if (err != null) {
              return next(err);
            }
            _this.field.reset(payload.model, result);
            return next();
          }), 0);
        });
      });
    };

    return FnFetch;

  })(require("./base"));

  module.exports = FnFetch;

}).call(this);
