// Generated by CoffeeScript 1.6.2
(function() {
  var Collection, ModelPlugin, async, createLinenModel, cstep, dref, outcome, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Collection = require("bindable").Collection;

  cstep = require("cstep");

  dref = require("dref");

  outcome = require("outcome");

  async = require("async");

  _ = require("underscore");

  Collection = require("./collection");

  createLinenModel = require("./model");

  ModelPlugin = (function() {
    /*
    */
    function ModelPlugin(linen, modelBuilder) {
      this.linen = linen;
      this.modelBuilder = modelBuilder;
      this._modelBuilderCreateCollection = __bind(this._modelBuilderCreateCollection, this);
      this.schema = modelBuilder.schema;
      this.route = {};
      this._setup();
    }

    /*
    */


    ModelPlugin.prototype.createCollection = function(path, options) {
      if (options == null) {
        options = {};
      }
      options.modelClass = options.modelClass || this.modelClass;
      return new Collection(path, this, options);
    };

    /*
    */


    ModelPlugin.prototype._modelBuilderCreateCollection = function(item, definition) {
      var collectionName, route, schemaName;

      schemaName = definition.options.$ref;
      collectionName = definition.key;
      route = _.extend({}, this.route, definition.options.$route || {});
      route.modelClass = definition.schema.linenBuilder.modelClass;
      return this.createCollection(collectionName, route);
    };

    /*
    */


    ModelPlugin.prototype._setup = function() {
      var modelBuilder, self;

      self = this;
      modelBuilder = this.modelBuilder = this.schema.modelBuilder;
      modelBuilder.createCollection = this._modelBuilderCreateCollection;
      this.modelClass = createLinenModel(this, modelBuilder.getClass());
      return modelBuilder.setClass(this.modelClass);
    };

    return ModelPlugin;

  })();

  exports.plugin = function(linen, modelBuilder) {
    var plugin;

    plugin = new ModelPlugin(linen, modelBuilder);
    modelBuilder.schema.linenBuilder = plugin;
    modelBuilder.linenBuilder = plugin;
    return plugin;
  };

}).call(this);
