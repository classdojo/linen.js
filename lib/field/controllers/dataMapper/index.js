// Generated by CoffeeScript 1.6.2
(function() {
  var DataMapFieldController, dataMapperFactory, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  dataMapperFactory = require('./decor/factory');

  DataMapFieldController = (function(_super) {
    __extends(DataMapFieldController, _super);

    function DataMapFieldController() {
      _ref = DataMapFieldController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    DataMapFieldController.prototype.name = "mapper";

    /*
    */


    DataMapFieldController.prototype.map = function(model, data) {
      return this.rootField.map(model, data);
    };

    /*
    */


    DataMapFieldController.prototype._mapPath = function(path, model, oldData) {
      var field;

      if (!path || path.length === 0) {
        field = this.rootField;
      } else {
        field = this.rootField.getField(path);
      }
      return field._mapper.map(model, oldData);
    };

    /*
    */


    DataMapFieldController.prototype.prepareModel = function(model, data) {
      var mapper, _i, _len, _ref1, _results,
        _this = this;

      model.reset = function(data, path) {
        var newData;

        if (path == null) {
          path = "";
        }
        newData = _this._mapPath(path, model, data);
        if (path === "") {
          return model.set(newData || {});
        } else {
          return model.set(path, newData);
        }
      };
      model.normalize = function() {
        return _this.rootField._mapper.normalize(model);
      };
      model.reset(data);
      _ref1 = this._decorators;
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        mapper = _ref1[_i];
        _results.push(mapper.prepareModel(model, data));
      }
      return _results;
    };

    /*
    */


    DataMapFieldController.prototype._createFieldDecorator = function(field) {
      return dataMapperFactory.create(field);
    };

    return DataMapFieldController;

  })(require("../base"));

  module.exports = function(rootField) {
    return new DataMapFieldController(rootField);
  };

}).call(this);
