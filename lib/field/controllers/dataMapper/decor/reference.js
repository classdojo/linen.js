// Generated by CoffeeScript 1.6.2
/*
 address: {
  $ref: "address"
 }
*/


(function() {
  var ReferenceMapper, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ReferenceMapper = (function(_super) {
    __extends(ReferenceMapper, _super);

    function ReferenceMapper() {
      _ref = ReferenceMapper.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    ReferenceMapper.prototype.map = function(model, data) {
      var refModel;

      if (!data) {
        return;
      }
      if (data.__isModel) {
        if (data.schema.name !== this.field.options.ref) {
          throw new Error("cannot assign model type \"" + data.schema.name + "\" to field \"" + this.field.path + "\" type \"" + this.field.options.ref + "\"");
        }
        refModel = data;
      } else {
        refModel = this.field.root.service.model(this.field.options.ref, data);
      }
      refModel.owner = model;
      return refModel;
    };

    /*
    */


    ReferenceMapper.prototype.normalize = function(model) {
      return model.get(this.field.path + "._id");
    };

    /*
    */


    ReferenceMapper.test = function(field) {
      return field.options.ref;
    };

    return ReferenceMapper;

  })(require("./base"));

  module.exports = ReferenceMapper;

}).call(this);
