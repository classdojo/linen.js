// Generated by CoffeeScript 1.6.2
(function() {
  var CollectionMapper, ModelCollection, ReferenceMapper, bindable, hoist, toarray,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bindable = require("bindable");

  toarray = require("toarray");

  hoist = require("hoist");

  ReferenceMapper = require("./reference");

  ModelCollection = require("./collections/model");

  CollectionMapper = (function(_super) {
    __extends(CollectionMapper, _super);

    /*
    */


    function CollectionMapper(field) {
      CollectionMapper.__super__.constructor.call(this, field);
      this._refMapper = new ReferenceMapper(field, true);
    }

    /*
    */


    CollectionMapper.prototype.map = function(model, source) {
      var c;

      if (!source) {
        source = [];
      }
      if (source.__isCollection) {
        return source;
      }
      c = model.get(this.field.path) || new ModelCollection(this, model);
      c.resetModels(toarray(source));
      return c;
    };

    /*
    */


    CollectionMapper.prototype.normalize = function(model) {
      var collection, item, source, _i, _len, _ref;

      collection = model.get(this.field.path);
      source = [];
      _ref = collection.source();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        source.push(item.normalize());
      }
      return source;
    };

    /*
    */


    CollectionMapper.test = function(field) {
      return !!(field.options.collection && field.options.ref);
    };

    return CollectionMapper;

  })(require("./base"));

  module.exports = CollectionMapper;

}).call(this);
