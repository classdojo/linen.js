// Generated by CoffeeScript 1.6.2
(function() {
  var CollectionMapper, SubMapper, bindable, toarray,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bindable = require("bindable");

  toarray = require("toarray");

  SubMapper = require("./sub");

  CollectionMapper = (function(_super) {
    __extends(CollectionMapper, _super);

    /*
    */


    function CollectionMapper(field) {
      CollectionMapper.__super__.constructor.call(this, field);
      this._subMapper = new SubMapper(field);
    }

    /*
    */


    CollectionMapper.prototype.map = function(model, source) {
      var c,
        _this = this;

      if (!source) {
        source = [];
      }
      if (source.__isCollection) {
        return source;
      }
      c = new bindable.Collection();
      c.reset(toarray(source).map(function(item) {
        return _this._subMapper.map(model, item);
      }));
      return c;
    };

    CollectionMapper.prototype.normalize = function(model) {
      var _ref;

      return (_ref = model.get(this.field.path)) != null ? _ref.source() : void 0;
    };

    /*
    */


    CollectionMapper.test = function(field) {
      return field.options.collection === true;
    };

    return CollectionMapper;

  })(require("./base"));

  module.exports = CollectionMapper;

}).call(this);
