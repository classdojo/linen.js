// Generated by CoffeeScript 1.6.2
(function() {
  var ModelCollection, bindable,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bindable = require("bindable");

  ModelCollection = (function(_super) {
    __extends(ModelCollection, _super);

    /*
    */


    function ModelCollection(field, owner) {
      var _this = this;

      this.field = field;
      this.owner = owner;
      this._onRemove = __bind(this._onRemove, this);
      this._onInsert = __bind(this._onInsert, this);
      ModelCollection.__super__.constructor.call(this);
      this.transform().map(function(v) {
        return _this.field._refMapper.map(_this.owner, v);
      });
      this.on({
        insert: this._onInsert,
        remove: this._onRemove
      });
    }

    /*
    */


    ModelCollection.prototype.clear = function() {
      var item, _i, _len, _ref, _results;

      _ref = this.source().concat();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        _results.push(this.remove(item));
      }
      return _results;
    };

    /*
    */


    ModelCollection.prototype.model = function(data) {
      var model,
        _this = this;

      if (data == null) {
        data = {};
      }
      model = this.field._refMapper.map(data, data);
      model.owner = this.owner;
      model.once("save", function() {
        return _this.push(model);
      });
      return model;
    };

    /*
    */


    ModelCollection.prototype._onInsert = function(model) {
      var _this = this;

      return model.once("remove", function() {
        return _this.remove(model);
      });
    };

    /*
    */


    ModelCollection.prototype._onRemove = function(model) {};

    return ModelCollection;

  })(bindable.Collection);

  module.exports = ModelCollection;

}).call(this);
