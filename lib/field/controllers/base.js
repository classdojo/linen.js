// Generated by CoffeeScript 1.6.2
/*

field = new Field {
  name: "string",
  address: {
    $type: "object"
    $validate: ["DO STUFF, DOOOOO STUFF!!!"]
  }
}

# validator controller takes on a field, and validates it against
a model
validator = new Validator field
*/


(function() {
  var BaseFieldController;

  BaseFieldController = (function() {
    /*
    */
    function BaseFieldController(rootField) {
      var _this = this;

      this.rootField = rootField;
      if (!this.name) {
        throw new Error("cannot create field controller without a name");
      }
      this._decorators = this.rootField.allFields.map(function(field) {
        return field["_" + _this.name] = _this._createFieldDecorator(field);
      });
    }

    /*
    */


    BaseFieldController.prototype.prepareModel = function(model, data) {};

    /*
    */


    BaseFieldController.prototype._createFieldDecorator = function(field) {};

    return BaseFieldController;

  })();

  module.exports = BaseFieldController;

}).call(this);
