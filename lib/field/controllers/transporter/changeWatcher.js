// Generated by CoffeeScript 1.6.2
(function() {
  var ChangeWatcher,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ChangeWatcher = (function() {
    /*
    */
    function ChangeWatcher(model, field) {
      this._onModelChange = __bind(this._onModelChange, this);      model.on("change", this._onModelChange);
      this._changes = {};
    }

    /*
    */


    ChangeWatcher.prototype.stop = function() {
      return this._ignore = true;
    };

    /*
    */


    ChangeWatcher.prototype.start = function() {
      return this._ignore = false;
    };

    /*
    */


    ChangeWatcher.prototype.purge = function() {
      return this._changes = {};
    };

    /*
    */


    ChangeWatcher.prototype.changed = function(path) {
      var key;

      for (key in this._changes) {
        if (key.indexOf(path) === 0) {
          return true;
        }
      }
      return false;
    };

    /*
    */


    ChangeWatcher.prototype._onModelChange = function(key, value) {
      if (this._ignore) {
        return;
      }
      return this._changes[key] = value;
    };

    return ChangeWatcher;

  })();

  module.exports = ChangeWatcher;

}).call(this);
