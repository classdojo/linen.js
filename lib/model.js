// Generated by CoffeeScript 1.6.2
(function() {
  var Model, bindable, toarray, type,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bindable = require("bindable");

  type = require("type-component");

  toarray = require("toarray");

  Model = (function(_super) {
    __extends(Model, _super);

    /*
    */


    function Model(schema) {
      this.schema = schema;
      Model.__super__.constructor.call(this);
      this._vgetting = {};
    }

    /*
     called when a property is being watched on this model
    */


    Model.prototype._watching = function(property) {
      return this.schema.fetch(this, property);
    };

    /*
    */


    Model.prototype.reset = function(data) {
      this.set(data);
      return this.changed = [];
    };

    /*
    */


    Model.prototype._watching = function(property) {
      return this.refresh([property]);
    };

    /*
    */


    Model.prototype.refresh = function(properties) {
      return this.schema.refresh(this, toarray(properties));
    };

    /*
    */


    Model.prototype.isNew = function() {
      return !this.get("_id");
    };

    /*
    */


    Model.prototype.fetch = function(next) {
      return this.schema.fetch(this);
    };

    /*
    */


    Model.prototype.validate = function(next) {
      return this.schema.validate(this);
    };

    /*
    */


    Model.prototype.save = function(next) {
      return this.schema.save(this);
    };

    return Model;

  })(bindable.Object);

  module.exports = Model;

}).call(this);
