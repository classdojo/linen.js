// Generated by CoffeeScript 1.6.2
(function() {
  var CollectionMapper, ModelCollection, PrimitiveCollection, toarray, type, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ModelCollection = require("../collections/model");

  PrimitiveCollection = require("../collections/primitive");

  type = require("type-component");

  toarray = require("toarray");

  CollectionMapper = (function(_super) {
    __extends(CollectionMapper, _super);

    function CollectionMapper() {
      _ref = CollectionMapper.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    CollectionMapper.prototype.map = function(model, value) {
      var newValue;

      if (value != null ? value.__isCollection : void 0) {
        return value;
      }
      newValue = this._createCollection();
      newValue.owner = model;
      newValue.reset(toarray(value));
      return newValue;
    };

    /*
    */


    CollectionMapper.prototype._createCollection = function() {
      if (this.field.options.ref) {
        return new ModelCollection(this.field);
      } else {
        return new PrimitiveCollection(this.field);
      }
    };

    return CollectionMapper;

  })(require("./base"));

  module.exports = CollectionMapper;

}).call(this);
