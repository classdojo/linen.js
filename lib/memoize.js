// Generated by CoffeeScript 1.6.2
(function() {
  var EventEmitter,
    __slice = [].slice;

  EventEmitter = require("events").EventEmitter;

  module.exports = function(fn, ops) {
    var called, em, memoizedArgs;

    if (ops == null) {
      ops = {};
    }
    em = new EventEmitter();
    called = false;
    memoizedArgs = null;
    return function() {
      var args, cb,
        _this = this;

      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      cb = args.pop() || (function() {});
      if (memoizedArgs) {
        return cb.apply(null, memoizedArgs);
      }
      em.once("done", cb);
      if (called) {
        return;
      }
      called = true;
      args.push(function() {
        var args;

        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        return setTimeout((function() {
          memoizedArgs = args;
          em.emit.apply(em, ["done"].concat(__slice.call(args)));
          if (ops.maxAge) {
            return setTimeout((function() {
              return memoizedArgs = called = void 0;
            }), ops.maxAge);
          }
        }), 0);
      });
      fn.apply(this, args);
      return this;
    };
  };

}).call(this);
